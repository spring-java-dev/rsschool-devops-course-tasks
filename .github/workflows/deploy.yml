name: Terraform Deployment

on:
    pull_request:
    push:
      branches:
        - main  # change to your default branch if different

permissions:
  id-token: write
  contents: read

jobs:
    terraform-check:
      concurrency:  # 
        group: ${{ github.workflow }}-${{ github.ref }}
        cancel-in-progress: true 
      permissions:
          id-token: write  # Critical for OIDC
          contents: read
      name: Terraform Format Check
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Cache Terraform providers
          uses: actions/cache@v4
          with:
            path: |
              ~/.terraform.d/plugin-cache
              .terraform
              .terraform.lock.hcl
            key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
            restore-keys: |
              ${{ runner.os }}-terraform-

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform fmt check
          run: terraform fmt -check -recursive
  
    terraform-plan:
      concurrency:  # 
        group: ${{ github.workflow }}-${{ github.ref }}
        cancel-in-progress: true 
      permissions:
        id-token: write  # Critical for OIDC
        contents: read
      name: Terraform Plan
      runs-on: ubuntu-latest
      needs: terraform-check
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2

        - name: Terraform plan
          run: terraform plan -lock-timeout=10m

        - name: Cache Terraform providers
          uses: actions/cache@v4
          with:
            path: |
              ~/.terraform.d/plugin-cache
              .terraform
              .terraform.lock.hcl
            key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
            restore-keys: |
              ${{ runner.os }}-terraform-

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com
  
        - name: Terraform init
          run: terraform init
  
        - name: Terraform plan
          run: terraform plan
  
    terraform-apply:
      concurrency:  # 
        group: ${{ github.workflow }}-${{ github.ref }}
        cancel-in-progress: true 
      permissions:
        id-token: write  # Critical for OIDC
        contents: read
      name: Terraform Apply
      runs-on: ubuntu-latest
      needs: terraform-plan
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Cache Terraform providers
          uses: actions/cache@v4
          with:
            path: |
              ~/.terraform.d/plugin-cache
              .terraform
              .terraform.lock.hcl
            key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
            restore-keys: |
              ${{ runner.os }}-terraform-

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform init
          run: terraform init
  
        - name: Terraform apply
          run: terraform apply -auto-approve
