name: Terraform Deployment

on:
    pull_request:
    push:
      branches:
        - main  # change to your default branch if different

permissions:
  id-token: write
  contents: read

jobs:
    terraform-check:
      name: Terraform Format Check
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Print GitHub context
          run: echo "$GITHUB_CONTEXT"
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}

        - name: Print GitHub OIDC token `sub`
          run: |
            echo "Fetching OIDC token..."
            OKEN=$(curl -sH "Authorization: Bearer $ACTIONS_ID_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}" \
            | jq -r '.value')
        
            echo "Decoded payload:"
            echo "$TOKEN" | cut -d '.' -f2 | base64 -d | jq .
          env:
            ACTIONS_ID_TOKEN_REQUEST_URL: ${{ steps.get-token.outputs.id-token-request-url }}
            ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ steps.get-token.outputs.id-token-request-token }}
          id: get-token

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform fmt check
          run: terraform fmt -check -recursive
  
    terraform-plan:
      name: Terraform Plan
      runs-on: ubuntu-latest
      needs: terraform-check
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com

  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform init
          run: terraform init
  
        - name: Terraform plan
          run: terraform plan
  
    terraform-apply:
      name: Terraform Apply
      runs-on: ubuntu-latest
      needs: terraform-plan
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::440423668970:role/GithubActionsRole
            aws-region: us-east-1
            audience: sts.amazonaws.com
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform init
          run: terraform init
  
        - name: Terraform apply
          run: terraform apply -auto-approve
